# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: build and deployment

on:
  push:
    branches: ["nextjs"]
  pull_request:
    branches: ["nextjs"]

env:
  IMAGE_NAME: playground2

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    outputs:
      IMAGE_URL: ${{ steps.push_image.outputs.IMAGE_URL }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          outputs: type=image,name=${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true


          # echo "IMAGE_URL='ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$VERSION'" | tee -a $GITHUB_OUTPUT
          # docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          # docker push $IMAGE_ID:$VERSION


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: deploy container
        run: |

          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            echo \"${{ secrets.GITHUB_TOKEN }}\" | sudo docker login ghcr.io -u $ --password-stdin; \
            sudo docker rm playground2; \
            sudo docker run --name $IMAGE_NAME ${{ needs.build.outputs.IMAGE_URL }}
          "
